مهام مشروع جانغو
تم تخصيص شهر له، بمعدل 3-5 يام بلاسبوع و 3 ساعات 
بما أنك خصصت وقتًا ممتازًا (3–5 أيام × 3 ساعات يوميًا)، فهذا يتيح لك تنفيذ المشروع بشكل مرتب وبدون ضغط.

---

## ✅ خطة المشروع الكاملة (مقسّمة لمهام واضحة + جدول زمني مرن):

### 🗓️ **الأسبوع 1: التحضير والبنية الأساسية**

#### ✅ اليوم 1:

* إنشاء مشروع Django
* إنشاء تطبيق `tasks`
* إعداد بيئة العمل الافتراضية `venv` + Git
* إعداد قاعدة بيانات SQLite مؤقتًا
* إعداد ملفات settings وتهيئة المشروع للـ API

#### ✅ اليوم 2:

* إنشاء نموذج `User` (إذا استخدمت `AbstractUser`) أو استخدام `User` الافتراضي
* إعداد Django REST Framework
* إنشاء نموذج `ToDo` وربطه بالمستخدم
* إنشاء Serializer لـ `ToDo`

#### ✅ اليوم 3:

* إنشاء endpoints CRUD للمهام (Create/Read/Update/Delete)
* تأكيد ارتباط المهام بالمستخدم

---

### 🗓️ **الأسبوع 2: المصادقة والصلاحيات**

#### ✅ اليوم 4:

* إعداد تسجيل مستخدم (User Registration Endpoint)
* إعداد تسجيل دخول (Login) باستخدام JWT (بمكتبة مثل `djangorestframework-simplejwt`)
* اختبار المصادقة عبر Postman

#### ✅ اليوم 5:

* ربط المصادقة بجميع عمليات المهام (يجب أن يكون المستخدم مسجل دخول)
* تقييد تحديث/حذف المهام لتكون من نفس صاحب المهمة فقط
* تجهيز توثيق بسيط عبر Postman أو Swagger

---

### 🗓️ **الأسبوع 3: الميزات الإضافية**

#### ✅ اليوم 6:

* إضافة Pagination في عرض المهام
* إضافة فلترة حسب الحالة (مثلاً: مكتملة، غير مكتملة)

#### ✅ اليوم 7:

* تحسين رسائل الخطأ (401/403/404)
* تجربة حذف وتعديل غير مصرح به وإرجاع الخطأ المناسب

#### ✅ اليوم 8:

* تحسين شكل الاستجابات (Responses)
* مراجعة الأمن الأساسي (مثلاً تعطيل واجهة admin إن لم تكن مستخدمة)

---

### 🗓️ **الأسبوع 4 (اختياري/مكافآت):**

#### ✅ اليوم 9:

* إضافة rate limiting (مثل `throttle_classes` في DRF)
* إضافة refresh token (موجودة ضمن simplejwt)

#### ✅ اليوم 10:

* كتابة اختبارات أساسية (unit tests)

#### ✅ اليوم 11:

* تجهيز README احترافي + رفع المشروع على GitHub

---

## 🧠 أدوات ستستخدمها:

| الجزء     | الأدوات                                   |
| --------- | ----------------------------------------- |
| Framework | Django + Django REST Framework            |
| Auth      | simplejwt أو custom token logic           |
| Database  | SQLite (أو PostgreSQL لو أحببت لاحقًا)    |
| Testing   | Postman / Curl / DRF test client          |
| نشر       | GitHub (لاحقًا Heroku أو Render إن أحببت) |

---
